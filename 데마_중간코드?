libname M "C:\Users\mycom\Desktop\mining";

%let filepath = C:\Users\mycom\Desktop\24yonsei\summary.csv;
filename csvfile "&filepath";
proc import datafile=csvfile
    out=M.summary
    dbms=csv
    replace;
    getnames=yes;
run;
filename csvfile clear;
proc print data=M.summary;
run;

/* 종속변수만 정규화 */
proc standard data=M.summary mean=0 std=1 out=M.summary_std;
    var rhinitispa atopypa; 
run;
proc print;
run;


/*상관분석*/
proc corr data=M.summary_std;
    var meantem meanhighesttem meanlowesttem hPa ave_waterpress ave_dewpointtem ave_relhud low_relhud sumrainfall ave_windspeed max_windspeed sum_sunhour sol_radiation sum_sol_radiation ave_groundtem av_NO2 av_O3 av_CO av_PM10 ; /* 독립 변수 */
    with rhinitispa atopypa foodpa;
run;


/*계절성에 따른 분포로 나누기*/
DATA summary_season;
    SET M.summary_std; 
    

    month = MOD(date, 100);

    IF 3 <= month <= 5 THEN season = 'Spring';
    ELSE IF 6 <= month <= 8 THEN season = 'Summer';
    ELSE IF 9 <= month <= 11 THEN season = 'Fall';
    ELSE IF month = 12 OR month = 1 OR month = 2 THEN season = 'Winter';

    DROP foodpa
    DROP month; 
RUN;
proc print;
run;

proc sort data=summary_season;
   by season;
run;

/* 1-1. 계절에 따른 아토피 외래환자 분포 boxplot */
proc sgplot data=summary_season;
   vbox atopypa / category=season;
   xaxis label='Season';
   yaxis label='Atopy Score';
run;


proc sql;
    select median(atopypa) into :summer_median
    from summary_season
    where season = 'Summer';
quit;

/* 1-2. 중간값을 기준으로 이진 변수 생성 */
data summary_season_atopy;
    set summary_season;
    if atopypa >= &summer_median then atopypa_1 = 1;
    else atopypa_1 = 0;
run;

%put Summer Median Atopy Score = &summer_median;

/* 1-3. 새로운 이진 변수 확인 */
proc print data=atopypa_season_atopy;
    var atopypa season atopypa_1;
run;

/* 1-4. 로지스틱 회귀분석, 전진선택법. */
proc logistic data=summary_season_atopy;
    class season (ref='Summer');
    model atopypa_1(event='1') = meantem meanhighesttem meanlowesttem hPa ave_waterpress
        ave_dewpointtem ave_relhud low_relhud sumrainfall ave_windspeed max_windspeed
        sum_sunhour sol_radiation sum_sol_radiation ave_groundtem av_NO2 av_O3 av_CO av_PM10 /
SELECTION=FORWARD
CTABLE PPROB = (0 TO 1 BY .1)
LACKFIT
RISKLIMITS;
ROC;
run;

/* 1-5. 의사결정나무_아토피 */
proc hpsplit data=summary_season_atopy;
   partition fraction(validate=0.3);
   target atopypa_1;
   input meantem meanhighesttem meanlowesttem hPa ave_waterpress
        ave_dewpointtem ave_relhud low_relhud sumrainfall ave_windspeed max_windspeed
        sum_sunhour sol_radiation sum_sol_radiation ave_groundtem av_NO2 av_O3 av_CO av_PM10 ;
run;




/* 2-1. 계절에 따른 비염 외래환자 분포 boxplot */
proc sgplot data=summary_season;
   vbox rhinitispa / category=season;
   xaxis label='Season';
   yaxis label='rhinitis Score';
run;

proc sql;
    select mean(rhinitispa) into :fall_mean
    from atopypa_season
    where season = 'Fall';
quit;

/* 2-2. 가을 평균을 기준으로 이진 변수 생성 */
data summary_season_rhinitis;
    set summary_season;
    if rhinitispa >= &fall_mean then rhinitis_1 = 1;
    else rhinitis_1 = 0;
run;

/* 2-3. 새로운 이진 변수 확인 */
proc print data=summary_season_rhinitis;
    var rhinitispa season rhinitis_1;
run;

/* 2-4. 로지스틱 회귀분석, stepwise도 돌려봤는데 전진선택법이랑 별 차이 없음 */
proc logistic data=summary_season_rhinitis;
    class season (ref='Fall');
    model rhinitis_1(event='1') = meantem meanhighesttem meanlowesttem hPa ave_waterpress
        ave_dewpointtem ave_relhud low_relhud sumrainfall ave_windspeed max_windspeed
        sum_sunhour sol_radiation sum_sol_radiation ave_groundtem av_NO2 av_O3 av_CO av_PM10 /
SELECTION=FORWARD
CTABLE PPROB = (0 TO 1 BY .1)
LACKFIT
RISKLIMITS;
ROC;
run;

/* 2-5. 의사결정나무_비염 */
proc hpsplit data=summary_season_rhinitis;
   partition fraction(validate=0.3);
   target rhinitis_1;
   input meantem meanhighesttem meanlowesttem hPa ave_waterpress
        ave_dewpointtem ave_relhud low_relhud sumrainfall ave_windspeed max_windspeed
        sum_sunhour sol_radiation sum_sol_radiation ave_groundtem av_NO2 av_O3 av_CO av_PM10 ;
run;
